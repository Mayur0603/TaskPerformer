@model TaskPerformer.Models.RegisterViewModel

@{
    ViewData["Title"] = "Register";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Register</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

    <style>
        body {
            background: linear-gradient(135deg, #667eea, #764ba2);
            height: 100vh;
            margin: 0;
            font-family: 'Poppins', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 10px;
        }

        .register-card {
            width: 50%;
            max-width: 600px;
            background: #fff;
            border-radius: 15px;
            box-shadow: 0 8px 24px rgba(0,0,0,0.2);
            padding: 20px 15px;
            box-sizing: border-box;
        }

        h4 {
            text-align: center;
            margin-bottom: 5px;
            font-weight: 600;
            color: #333;
        }

        .Register-logo {
            width: 130px;
            height: auto;
            margin-bottom: 0px;
        }

        .form-control {
            border-radius: 5px;
            font-size: 15px;
            height: 42px;
            padding: 8px 12px;
            line-height: 1.5;
        }

            .form-control::placeholder {
                font-size: 15px;
                color: #888;
                opacity: 1;
            }

        .btn-primary {
            border-radius: 5px;
            font-weight: 600;
            padding: 10px;
            font-size: 1rem;
        }

        .form-text a {
            color: #764ba2;
            text-decoration: underline;
        }

            .form-text a:hover {
                text-decoration: none;
            }

        .text-danger {
            font-size: 0.875rem;
        }

        .form-check-label {
            user-select: none;
        }
    </style>

</head>
<body>
    <div class="register-card text-center">
        <h4>Create Your Account</h4>
        <img src="https://cdn-icons-png.flaticon.com/512/3456/3456388.png" alt="Logo" class="Register-logo" />
        <form asp-action="Register" method="post" novalidate id="registerForm" class="text-start">
            <div asp-validation-summary="All" class="text-danger mb-3"></div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="FirstName" class="form-label">First Name</label>
                    <input asp-for="FirstName" class="form-control" autocomplete="given-name" placeholder="Enter Your First name" />
                    <span asp-validation-for="FirstName" class="text-danger small"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="LastName" class="form-label">Last Name</label>
                    <input asp-for="LastName" class="form-control" autocomplete="family-name" placeholder="Enter Your Last Name" />
                    <span asp-validation-for="LastName" class="text-danger small"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Username" class="form-label">Username</label>
                    <input asp-for="Username" class="form-control" autocomplete="username" placeholder="Enter Your Username" />
                    <span asp-validation-for="Username" class="text-danger small"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="Email" class="form-label">Email</label>
                    <input asp-for="Email" type="email" class="form-control" autocomplete="email" id="Email" placeholder="Enter You Valid Email" />
                    <span asp-validation-for="Email" class="text-danger small"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Password" class="form-label">Password</label>
                    <input asp-for="Password" type="password" class="form-control" autocomplete="new-password" id="Password" placeholder="Create Your Password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                    <small id="passwordStrength" class="form-text small"></small>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                    <input asp-for="ConfirmPassword" type="password" class="form-control" autocomplete="new-password" placeholder="Confirm Your Password" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                </div>
            </div>

            <div class="form-check mb-3">
                <input type="checkbox" required id="terms" class="form-check-input" />
                <label for="terms" class="form-check-label">
                    I agree to the <a href="/terms" target="_blank" rel="noopener noreferrer">terms and conditions</a>
                </label>
            </div>

            <div class="d-grid mb-3">
                <button type="submit" class="btn btn-primary">Register</button>
            </div>
        </form>

        <p class="form-text text-center">
            Already have an account? <a asp-action="Login" asp-controller="Account">Login here</a>
        </p>
    </div>

    <!-- Bootstrap JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const form = document.getElementById("registerForm");
            const emailInput = document.getElementById("Email");
            const passwordInput = document.getElementById("Password");
            const passwordStrength = document.getElementById("passwordStrength");
             const usernameInput = document.getElementById("Username");

            form.addEventListener("submit", e => {
                const email = emailInput.value.trim();
                const password = passwordInput.value.trim();
                  const username = usernameInput.value.trim();

                const emailRegex = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
                const passwordRegex = /^(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{6,}$/;
                 const usernameRegex = /^(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{6,}$/;

                if (!emailRegex.test(email)) {
                    e.preventDefault();
                    alert("Please enter a valid email address.");
                    emailInput.focus();
                    return;
                }

                if (!passwordRegex.test(password)) {
                    e.preventDefault();
                    alert("Password must contain at least one uppercase letter, one number, and one special character.");
                    passwordInput.focus();
                    return;
                }

                 if (!usernameRegex.test(username)) {
                    e.preventDefault();
                    alert("Username must be at least 6 characters and contain at least one uppercase letter, one number, and one special character.");
                    usernameInput.focus();
                    return;
                }
            });

            passwordInput.addEventListener("input", () => {
                const val = passwordInput.value;
                let strength = "Weak", color = "#ff4d4d";

                if (/^(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$/.test(val)) {
                    strength = "Strong";
                    color = "#4caf50";
                } else if (val.length >= 6) {
                    strength = "Moderate";
                    color = "#ffa500";
                }

                passwordStrength.textContent = val ? `Password strength: ${strength}` : "";
                passwordStrength.style.color = color;
            });
        });
    </script>
</body>
</html>
