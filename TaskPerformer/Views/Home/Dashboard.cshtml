@model TaskPerformer.Models.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}
<h2 class="mb-5 fade-in">Welcome, @Context.Session.GetString("FullName")</h2>

<style>
    .fade-in {
        opacity: 0;
        animation: fadeIn 1.5s ease forwards;
    }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
    }

    to {
        opacity: 1;
    }

    
    
</style>

<style>
    
    
    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }

    a.text-decoration-none {
        color: inherit;
    }

        a.text-decoration-none:hover {
            text-decoration: none;
        }


    .task-section {
        animation: fadeInUp 0.6s ease;
    }

    @@keyframes fadeInUp {
        from


    {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .card {
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
    }

</style>

<div class="row g-4">

    <a href="@Url.Action("Index", "Todo", new { tabfilter = "All" })" class="dashboard-card col-md-3 text-decoration-none">
        <div class="card text-bg-primary shadow-sm h-100">
            <div class="card-body d-flex flex-column justify-content-center align-items-center">
                <h5 class="card-title">Total Tasks</h5>
                <p class="display-4">@Model.TotalTasks</p>
            </div>
        </div>
    </a>

    <a href="@Url.Action("Index", "Todo", new { tabfilter = "Completed" })" class="dashboard-card col-md-3 text-decoration-none">
        <div class="card text-bg-success shadow-sm h-100">
            <div class="card-body d-flex flex-column justify-content-center align-items-center">
                <h5 class="card-title">Completed</h5>
                <p class="display-4">@Model.CompletedTasks</p>
            </div>
        </div>
    </a>

    <a href="@Url.Action("Index", "Todo", new { tabfilter = "Pending" })" class="dashboard-card col-md-3 text-decoration-none">
        <div class="card text-bg-warning shadow-sm h-100">
            <div class="card-body d-flex flex-column justify-content-center align-items-center">
                <h5 class="card-title">Pending</h5>
                <p class="display-4">@Model.PendingTasks</p>
            </div>
        </div>
    </a>

    <a href="@Url.Action("Index", "Todo", new { tabfilter = "Today" })" class="dashboard-card col-md-3 text-decoration-none">
        <div class="card text-bg-danger shadow-sm h-100">
            <div class="card-body d-flex flex-column justify-content-center align-items-center">
                <h5 class="card-title">Due Today</h5>
                <p class="display-4">@Model.TasksDueToday.Count</p>
            </div>
        </div>
    </a>

</div>
<style>
    .dashboard-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;
        display: block;
    }

        .dashboard-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
            text-decoration: none;
            color: inherit;
        }
</style>

    @if (Model.TasksDueToday.Any())
    {
        <div class="card mt-4 task-section">
            <div class="card-header bg-info text-white">
                Tasks Due Today
            </div>
            <ul class="list-group list-group-flush">
                @foreach (var task in Model.TasksDueToday)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>@task.Title</span>
                        <span class="badge bg-secondary">@task.DueDate.ToShortDateString()</span>
                    </li>
                }
            </ul>
        </div>
    }
    else
    {
        <div class="alert alert-light mt-4">🎉 No tasks due today!</div>
    }
</div>
